name: Deploy to Vercel

on:
  push:
    branches:
      - dev
      - qa
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate Prisma Client
        run: bunx prisma generate

      - name: Set environment vars
        id: set-env
        run: |
          BRANCH_NAME=${GITHUB_REF##*/}
          case "$BRANCH_NAME" in
            dev)
              echo "NODE_ENV=development" >> $GITHUB_ENV
              echo "DATABASE_URL=${{ secrets.DATABASE_URL_DEV }}" >> $GITHUB_ENV
              echo "ALIAS=dev.et-tasks-api.vercel.app" >> $GITHUB_ENV
              echo "VERCEL_ENV=preview" >> $GITHUB_ENV
              ;;
            qa)
              echo "NODE_ENV=qa" >> $GITHUB_ENV
              echo "DATABASE_URL=${{ secrets.DATABASE_URL_QA }}" >> $GITHUB_ENV
              echo "ALIAS=qa.et-tasks-api.vercel.app" >> $GITHUB_ENV
              echo "VERCEL_ENV=preview" >> $GITHUB_ENV
              ;;
            main)
              echo "NODE_ENV=production" >> $GITHUB_ENV
              echo "DATABASE_URL=${{ secrets.DATABASE_URL_PROD }}" >> $GITHUB_ENV
              echo "ALIAS=prod.et-tasks-api.vercel.app" >> $GITHUB_ENV
              echo "VERCEL_ENV=production" >> $GITHUB_ENV
              ;;
          esac

      - name: Apply Prisma Migrations
        run: bunx prisma migrate deploy
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Build project
        run: bun run build

      - name: Pull Vercel Project Settings
        run: bunx vercel pull --yes --environment=${{ env.VERCEL_ENV }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        id: vercel-deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          echo "Deploying branch $GITHUB_REF_NAME with env $VERCEL_ENV"
          DEPLOY_URL=$(bunx vercel deploy \
            --prebuilt \
            --prod --confirm \
            --token=$VERCEL_TOKEN \
            --env NODE_ENV=$NODE_ENV \
            --env DATABASE_URL=$DATABASE_URL)

          echo "DEPLOY_URL=$DEPLOY_URL" >> $GITHUB_ENV

      - name: Set Vercel Alias
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          echo "Assigning alias $ALIAS to deployment $DEPLOY_URL"
          bunx vercel alias set $DEPLOY_URL $ALIAS --token=$VERCEL_TOKEN
